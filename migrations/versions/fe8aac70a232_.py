"""empty message

Revision ID: fe8aac70a232
Revises: 
Create Date: 2020-03-06 13:14:16.048790

"""
from alembic import op
import sqlalchemy as sa
from backend.helpers.import_seed_data import compound_seed_data, member_seed_data


# revision identifiers, used by Alembic.
revision = 'fe8aac70a232'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compound',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gsk_compound_num', sa.String(length=30), nullable=True),
    sa.Column('qtx_compound_num', sa.String(length=20), nullable=True),
    sa.Column('pubchem_compound_id', sa.String(length=30), nullable=True),
    sa.Column('cas_num', sa.String(length=30), nullable=True),
    sa.Column('drug_class', sa.String(length=120), nullable=True),
    sa.Column('analog_info', sa.String(length=120), nullable=True),
    sa.Column('screening_info', sa.String(length=120), nullable=True),
    sa.Column('molecular_weight', sa.Float(), nullable=True),
    sa.Column('compound_class', sa.String(length=120), nullable=True),
    sa.Column('multimer_class', sa.String(length=30), nullable=True),
    sa.Column('dimerization_position', sa.String(length=30), nullable=True),
    sa.Column('p2_group', sa.String(length=20), nullable=True),
    sa.Column('p3_group', sa.String(length=20), nullable=True),
    sa.Column('p3_group_radical', sa.String(length=20), nullable=True),
    sa.Column('structure_reference_code', sa.String(length=30), nullable=True),
    sa.Column('smiles_string', sa.Text(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cas_num'),
    sa.UniqueConstraint('gsk_compound_num'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('pubchem_compound_id'),
    sa.UniqueConstraint('qtx_compound_num')
    )
    op.create_table('list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('list_type', sa.String(length=30), nullable=False),
    sa.Column('description', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('institution', sa.String(length=120), nullable=False),
    sa.Column('is_executive_assistant', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('executive_assistant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['executive_assistant_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('classification', sa.String(length=20), nullable=False),
    sa.Column('multiplier', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('compound_id', sa.Integer(), nullable=False),
    sa.Column('lnb_reference', sa.String(length=30), nullable=True),
    sa.Column('source_reference', sa.String(length=50), nullable=True),
    sa.Column('source_barcode', sa.String(length=50), nullable=True),
    sa.Column('lot_num', sa.String(length=50), nullable=True),
    sa.Column('source_name', sa.String(length=120), nullable=True),
    sa.Column('chemist', sa.String(length=50), nullable=True),
    sa.Column('date_synthesized', sa.DateTime(), nullable=True),
    sa.Column('shipment_num', sa.String(length=20), nullable=True),
    sa.Column('date_ordered', sa.DateTime(), nullable=True),
    sa.Column('ordered_by', sa.String(length=50), nullable=True),
    sa.Column('catalog_number', sa.String(length=100), nullable=True),
    sa.Column('date_received', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('email_address', sa.String(length=50), nullable=False),
    sa.Column('label', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('list_memberships',
    sa.Column('list_id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['list_id'], ['list.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], )
    )
    op.create_table('phone_number',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('label', sa.String(length=30), nullable=False),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cure_center_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('nick_name', sa.String(length=30), nullable=True),
    sa.Column('suffix', sa.String(length=30), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('is_internal', sa.Boolean(), nullable=True),
    sa.Column('is_qura_funded', sa.Boolean(), nullable=True),
    sa.Column('image_url', sa.String(length=120), nullable=True),
    sa.Column('onyen', sa.String(length=30), nullable=True),
    sa.Column('staff_designation', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('qura_log_num', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('compound_id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('date_entered', sa.DateTime(), nullable=False),
    sa.Column('barcode', sa.String(length=50), nullable=True),
    sa.Column('owner_initials', sa.String(length=10), nullable=False),
    sa.Column('weighed_by', sa.String(length=50), nullable=True),
    sa.Column('qura_project_code', sa.String(length=30), nullable=True),
    sa.Column('gsk_project_code', sa.String(length=20), nullable=True),
    sa.Column('is_empty', sa.Boolean(), nullable=True),
    sa.Column('concentration', sa.Float(), nullable=True),
    sa.Column('concentration_units', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('weight_units', sa.Integer(), nullable=False),
    sa.Column('vehicle', sa.String(length=50), nullable=True),
    sa.Column('vehicle_volume', sa.Float(), nullable=True),
    sa.Column('vehicle_volume_units', sa.Integer(), nullable=False),
    sa.Column('is_solid', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('parent_vial_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=50), nullable=True),
    sa.Column('balance', sa.String(length=50), nullable=True),
    sa.Column('gsk_log_num', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.id'], ),
    sa.ForeignKeyConstraint(['concentration_units'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['parent_vial_id'], ['vial.id'], ),
    sa.ForeignKeyConstraint(['vehicle_volume_units'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['weight_units'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cure_center_profile_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('department', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['cure_center_profile_id'], ['cure_center_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    compound_seed_data()
    member_seed_data()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('position')
    op.drop_table('vial')
    op.drop_table('cure_center_profile')
    op.drop_table('phone_number')
    op.drop_table('list_memberships')
    op.drop_table('group')
    op.drop_table('email')
    op.drop_table('batch')
    op.drop_table('unit')
    op.drop_table('member')
    op.drop_table('list')
    op.drop_table('compound')
    # ### end Alembic commands ###
